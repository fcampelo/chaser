% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/run_nreps.R
\name{run_nreps}
\alias{run_nreps}
\title{Automatically determine sample size for an algorithm on a problem instance}
\usage{
run_nreps(instance, algo, dmax, stat = c("mean", "median"),
  method = c("param", "boot", "binom"), alpha = 0.05, nstart = 20,
  nmax = Inf, seed = NULL, ...)
}
\arguments{
\item{instance}{a list object containing the definitions of the problem
instance. See Section \code{Problems and Algorithms} for details.}

\item{algo}{a list object containing the definitions of the algorithm.
See Section \code{Problems and Algorithms} for details.}

\item{dmax}{desired confidence interval halfwidth for the estimated
mean/median performance of algorithm \code{algo} on instance
\code{problem}.}

\item{stat}{name of statistic for which the CI is desired.}

\item{method}{method used to calculate the interval. Accepts "param" (the
default), "boot" (for bootstrap) or "binom" (for binomial median CI)}

\item{alpha}{desired significance level for the interval.}

\item{nstart}{initial number of algorithm runs.
See \code{Initial Number of Observations} for details.}

\item{nmax}{maximum allowed sample size.}

\item{seed}{seed for the random number generator
(\code{NULL} for using \code{Sys.time()}).}

\item{...}{further parameters to be passed on to \code{boot}
         (if method == "boot")}
}
\value{
a list object containing the following items:
\itemize{
   \item \code{x} - vector of observed performance values
   \item \code{x.est} - estimated value for the statistic of interest of the
         performance of \code{algo} on \code{problem}
   \item \code{se} - standard error of the estimate
   \item \code{delta} - the CI halfwidth
   \item \code{n} - number of observations generated
   \item \code{seed} - the seed used for the PRNG
}
}
\description{
Iteratively calculates the required sample size for an algorithm on a
   problem instance, so that the final number of replicates yields an
   estimation of expected performance with a predefined maximum uncertainty.
}
\section{Instances and Algorithms}{

Parameters \code{instance} and \code{algorithm} must each be a list of
instance (algorithm) specifications, defined according to the instructions
given below.

\code{instance} is a named list containing all relevant parameters that
define the problem instance. This list must contain at least the following
fields:

\itemize{
   \item \code{$name} - name of the problem instance function, that is, a
         routine that calculates y = f(x)
   \item \code{$xmin} - vector of lower bounds of each variable
   \item \code{$xmax} - vector of upper bounds of each variable
}

If the instance requires additional parameters, these must also be provided
as named fields.

Similarly, \code{algorithm} must be a named list containing all relevant
parameters that define the algorithm to be applied for solving the problem
instance.

\code{algorithm} must contain a \code{$name} field (the name of the
function that calls the algorithm) and any other elements/parameters that
\code{algorithm$name} requires (e.g., population size, stop criteria,
operator names and parameters, etc.).

The function defined by the routine \code{algorithm$name} must have the
following structure: supposing that the list in \code{algorithm} has
fields \code{$name = myalgo} and \code{$par1 = "a", $par2 = 5}, then:

   \preformatted{
         myalgo <- function(par1, par2, instance, ...){
               # do stuff
               # ...
               return(results)
         }
   }

That is, it must be able to run if called as:

   \preformatted{
         # remove '$name' field from list of arguments
         # and include the problem definition as field 'instance'
         myargs          <- algorithm[names(algorithm) != "name"]
         myargs$instance <- instance

         # call function
         do.call(algorithm$name,
                 args = myargs)
   }

The \code{algorithm$name} routine must return a list containing (at
least) the function value of the final solution obtained
(\code{result$Fbest)} after a given run.
}

\section{Initial Number of Observations}{

In the general case the initial number of observations / algorithm / instance
(\code{nstart}) should be relatively high (> 20 if outliers are not
expected, > 50 (at least) if that assumption can't be made) to guarantee good
statistical properties (particularly compliance with nominal type-I error
rate \code{alpha}). However, if some distributional assumptions can be
made - particularly low skewness of the population of algorithm results on
the test instances), then \code{nstart} can in principle be as small as 5.

In general, higher sample sizes are the price to pay for abandoning
distributional assumptions. Use lower values of \code{nstart} with caution.
}

\section{References}{

P. Mathews.
"Sample size calculations: Practical methods for engineers and scientists".
Mathews Malnar and Bailey, 2010.
J. Botella, C. Ximenez, J. Revuelta, M. Suero.
"Optimization of sample size in controlled experiments: the CLAST rule".
Behavior Research Methods, 38(1) 65 - 76, 2006
}
\examples{
instance <- list(name = "dummyinstance", xmax = 1, xmin = 0)
algo     <- list(name              = "dummyalgo",
                 distribution.fun  = "rexp",
                 distribution.pars = list(rate = 0.5))
out      <- run_nreps(instance, algo, dmax = 1,
                      stat = "mean", method = "boot")
}
\author{
Felipe Campelo (\email{fcampelo@ufmg.br}),
        Fernanda Takahashi (\email{fernandact@ufmg.br})
}

